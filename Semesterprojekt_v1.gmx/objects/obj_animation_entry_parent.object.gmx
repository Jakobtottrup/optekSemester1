<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DISABLE PLAYER MOVEMENT
global.player_movement = false;
image_speed = (room_speed/100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message("parent animation");
if(global.last_move == 1) //forward
    {
    switch (global.player_view_id)  //get player_view_id and draw proper sprite
        {
        case 0: instance_change(obj_00_dead_end, true);              break;  //dead end
        case 1: instance_change(obj_01_left, true);                    break;  //left
        case 2: instance_change(obj_02_exit_straight, true);               break;  //forward
        case 3: instance_change(obj_03_exit_straight, true);          break;  //forward, left
        case 4: instance_change(obj_04_right, true);                 break;  //right
        case 5: instance_change(obj_05_left_right, true);            break;  //left, right
        case 6: instance_change(obj_06_exit_straight, true);         break;  //forward, right
        case 7: instance_change(obj_07_exit_straight, true);    break;  //forward, right, left   
        case 8: instance_change(obj_08_goal, true);                  break;  //finish
        default: draw_text(spr_x, spr_y, "player_view_id not recognized"); //When player_view_id is invald
    }
    
} else if (global.last_move == 2) //left
    {
    switch (global.player_view_id)  //get player_view_id and draw proper sprite
        {
        case 0: instance_change(obj_00_dead_end, true);              break;  //dead end
        case 1: instance_change(obj_01_exit_left, true);                  break;  //left
        case 2: instance_change(obj_02_forward, true);               break;  //forward
        case 3: instance_change(obj_03_exit_left, true);          break;  //forward, left
        case 4: instance_change(obj_04_right, true);                 break;  //right
        case 5: instance_change(obj_05_exit_left, true);            break;  //left, right
        case 6: instance_change(obj_06_forward_right, true);         break;  //forward, right
        case 7: instance_change(obj_07_exit_straight, true);    break;  //forward, right, left   
        case 8: instance_change(obj_08_goal, true);                  break;  //finish
        default: draw_text(spr_x, spr_y, "player_view_id not recognized"); //When player_view_id is invald
    }
        
} else if(global.last_move == 3) //right
    {
    switch (global.player_view_id)  //get player_view_id and draw proper sprite
        {
        case 0: instance_change(obj_00_dead_end, true);              break;  //dead end
        case 1: instance_change(obj_01_left, true);                  break;  //left
        case 2: instance_change(obj_02_forward, true);               break;  //forward
        case 3: instance_change(obj_03_forward_left, true);          break;  //forward, left
        case 4: instance_change(obj_04_exit_right, true);                 break;  //right
        case 5: instance_change(obj_05_exit_right, true);            break;  //left, right
        case 6: instance_change(obj_06_exit_right, true);         break;  //forward, right
        case 7: instance_change(obj_07_exit_right, true);    break;  //forward, right, left   
        case 8: instance_change(obj_08_goal, true);                  break;  //finish
        default: draw_text(spr_x, spr_y, "player_view_id not recognized"); //When player_view_id is invald
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FREEZE ANIMATION
//global.player_movement = true;

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
